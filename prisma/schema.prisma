// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}


// schema.prisma
enum Status {
  COMPLETE
  IN_PROGRESS
  PLANNED
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model Todo {
  todoId    String @id @default(cuid()) 
  title     String
  content   String?
  status Status @default(PLANNED)
  todoPosibleStatus Status[] @default([COMPLETE, IN_PROGRESS, PLANNED])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  dueDate   DateTime?
  author    User? @relation(fields: [authorId], references: [id])
  authorId  String

  @@index([authorId, todoId])
}

model User {
  id            String @id @default(cuid()) 
  name          String?
  email         String? @unique
  emailVerified DateTime?
  image         String?
  password      String?
  createdAt     DateTime @default(now()) @map(name: "created_at")
  updatedAt     DateTime @updatedAt @map(name: "updated_at")
  todos         Todo[]
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}